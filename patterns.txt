# Project Name:  SNAKE PEOPLE UML Editor
# File Name:     patterns.txt

Design Pattern: Iterators
    Location: File: UMLField line: 27
    Description: I used Python's built in for loop, which makes use of
                 iterators, to traverse a list of fields within the
                 class_dict
Design Pattern: Memento
    Location: File: UMLSavepoint line: 20-68
    Description: I created a wrapper object that saves the current state
                 of the model for the canvas, so that later
                 I can repopulate the canvas with the previous state.
Design Pattern: Observer
    Location: File: UMLBox line: 51
    Description: I create a list of all lines that would need to be updated.
                 Whenever a box is moved, an update is sent out to all
                 'subscribing' lines (lines that are connected to the box)
                 and they are told to update their position
Design Pattern: State
    Location: File: UMLField line: 15
    Description: I change the state of the fields textbox to disabled so that
                 now it gets displayed instead of being hidden
Design Pattern: State
    Location: File: UMLMethod line: 14
    Description: I change the state of the methods textbox to disabled so that
                 now it gets displayed instead of being hidden
Design Pattern: MVC
    Location: Model: UMLClass, UMLRelationships
              View: UMLBox
              Controller: gui_main, Side_Panel, snake_uml
    Description: The model contains all the information for either classes
                 or relationships. This takes the form of class_dict and 
                 relationship_list. The view creates all necessary components
                 to display objects on the canvas. The view componants are
                 contained within the class_list. And the Controller works
                 either to listen for button clicks in the gui, or command
                 line input, depending on the startup mode. This is found throughout
                 all the controller files
Design Pattern: Bridge
    Location: UMLClass/UMLField/UMLMethod objects located in UMLclass/UMLAttributes
    Description: Each class is composed of lists of UMLFields and UMLMethods.
                 The UMLClass object refers to previously created UMLField
                 objects and UMLMethod objects.
Design Pattern: Bridge
    Location: UMLMethod objects located in UMLAttributes
    Description: Each method is composed of UMLParameter objects. Each method
                 Object can have variable numbers of parameters with different
                 types and names.
Design Pattern: Decorator
    Location: UMLBox
    Description: Each box on the canvas is composed of multiple parts. I wrap these
                 parts into one object so that the entire UMLClass respresentation
                 can be accessed as one entity.
Design Pattern: Singleton
    Location: UMLBox
    Desciption: A single canvas object is created within UMLBox, so that the canvas
                has a single instance and a global access point for all other
                functions.